// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    logs "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/logs/models"
)

type SystemLogHistoryRequest struct {

    core.JDCloudRequest

    /*   */
    AppName string `json:"appName"`

    /* 精确匹配，true 或者 false (Optional) */
    ExactMatch *bool `json:"exactMatch"`

    /*   */
    Instance string `json:"instance"`

    /* 查询关键字 (Optional) */
    Keyword *string `json:"keyword"`

    /*   */
    LogType string `json:"logType"`

    /* 排序，取值"ASC"或"DESC"，默认"ASC" (Optional) */
    Order *string `json:"order"`

    /* 页数，从1开始 (Optional) */
    Page *int64 `json:"page"`

    /* 每页日志条数 (Optional) */
    Size *int64 `json:"size"`

    /*   */
    Time *logs.TimestampRange `json:"time"`
}

/*
 * param appName:  (Required)
 * param instance:  (Required)
 * param logType:  (Required)
 * param time:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSystemLogHistoryRequest(
    appName string,
    instance string,
    logType string,
    time *logs.TimestampRange,
) *SystemLogHistoryRequest {

	return &SystemLogHistoryRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/systemLogHistory",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        AppName: appName,
        Instance: instance,
        LogType: logType,
        Time: time,
	}
}

/*
 * param appName:  (Required)
 * param exactMatch: 精确匹配，true 或者 false (Optional)
 * param instance:  (Required)
 * param keyword: 查询关键字 (Optional)
 * param logType:  (Required)
 * param order: 排序，取值"ASC"或"DESC"，默认"ASC" (Optional)
 * param page: 页数，从1开始 (Optional)
 * param size: 每页日志条数 (Optional)
 * param time:  (Required)
 */
func NewSystemLogHistoryRequestWithAllParams(
    appName string,
    exactMatch *bool,
    instance string,
    keyword *string,
    logType string,
    order *string,
    page *int64,
    size *int64,
    time *logs.TimestampRange,
) *SystemLogHistoryRequest {

    return &SystemLogHistoryRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/systemLogHistory",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        AppName: appName,
        ExactMatch: exactMatch,
        Instance: instance,
        Keyword: keyword,
        LogType: logType,
        Order: order,
        Page: page,
        Size: size,
        Time: time,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSystemLogHistoryRequestWithoutParam() *SystemLogHistoryRequest {

    return &SystemLogHistoryRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/systemLogHistory",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appName: (Required) */
func (r *SystemLogHistoryRequest) SetAppName(appName string) {
    r.AppName = appName
}

/* param exactMatch: 精确匹配，true 或者 false(Optional) */
func (r *SystemLogHistoryRequest) SetExactMatch(exactMatch bool) {
    r.ExactMatch = &exactMatch
}

/* param instance: (Required) */
func (r *SystemLogHistoryRequest) SetInstance(instance string) {
    r.Instance = instance
}

/* param keyword: 查询关键字(Optional) */
func (r *SystemLogHistoryRequest) SetKeyword(keyword string) {
    r.Keyword = &keyword
}

/* param logType: (Required) */
func (r *SystemLogHistoryRequest) SetLogType(logType string) {
    r.LogType = logType
}

/* param order: 排序，取值"ASC"或"DESC"，默认"ASC"(Optional) */
func (r *SystemLogHistoryRequest) SetOrder(order string) {
    r.Order = &order
}

/* param page: 页数，从1开始(Optional) */
func (r *SystemLogHistoryRequest) SetPage(page int64) {
    r.Page = &page
}

/* param size: 每页日志条数(Optional) */
func (r *SystemLogHistoryRequest) SetSize(size int64) {
    r.Size = &size
}

/* param time: (Required) */
func (r *SystemLogHistoryRequest) SetTime(time *logs.TimestampRange) {
    r.Time = time
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SystemLogHistoryRequest) GetRegionId() string {
    return ""
}

type SystemLogHistoryResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SystemLogHistoryResult `json:"result"`
}

type SystemLogHistoryResult struct {
    Data []interface{} `json:"data"`
    Hits int64 `json:"hits"`
    Size int64 `json:"size"`
}